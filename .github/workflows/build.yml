on:
    workflow_call:
      inputs:
        amplify-app-id:
          description: "The ID for your Amplify app (which you can get from the end of its ARN)"
          required: false
          type: string
        node-version:
          description: "The node version to use when building the application"
          required: true
          type: number
        os:
          description: "The operating system to use when building the application"
          required: true
          type: string
        package-name:
          description: "Name of the application being deployed"
          required: true
          type: string
        package-dist-directory:
          description: "The directory where the package dist is located"
          required: false
          type: string
        bucket-name-preview:
          description: "Name of the preview bucket being deployed to"
          required: false
          type: string
        bucket-name-main:
          description: "Name of the main bucket being deployed to"
          required: false
          type: string
        deploy:
          description: "Boolean flag on whether to deploy the application with the given node version"
          required: true
          type: boolean

env:
  AMPLIFY_ID: ${{ inputs.amplify-app-id }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'eu-west-1'
  BRANCH_NAME: ${{ github.event_name == 'pull_request' && format('pr{0}', github.event.number) || github.ref == 'refs/heads/main' && 'main' }}
  BUCKET_NAME: ${{ github.event_name == 'pull_request' && inputs.bucket-name-preview || (github.ref == 'refs/heads/main' && inputs.bucket-name-main) }}
  ZIP_NAME: ${{ github.event_name == 'pull_request' && format('{0}-{1}-preview.zip', inputs.package-name, github.event.number) || (github.ref == 'refs/heads/main' && format('{0}-main.zip', inputs.package-name)) }}

jobs:
  build:
    runs-on: ${{ inputs.os  }}
    steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3

      # Setup Node
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install Dependencies & Build - ${{ inputs.package-name }}
        shell: bash
        working-directory: ./${{ inputs.package-name }}
        run: yarn && yarn build

      # This is a slightly modified version of the following workflow - https://github.com/justeattakeaway/pie/blob/main/.github/workflows/amplify-deploy.yml
      # Create Github Deployment
      - name: Create Docs GitHub deployment
        if: github.event_name == 'pull_request' && inputs.deploy == true
        uses: chrnorm/deployment-action@v2
        id: deploy
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            environment: "${{ inputs.package-name}}-pr-${{ github.event.number }}"

      # Zip dist folder
      - name: Zip build output
        if: github.event_name == 'pull_request' && inputs.deploy == true
        shell: bash
        run: |
            cd ${{ inputs.package-dist-directory }}
            zip -r ./${{ env.ZIP_NAME }} .

      # Upload zip to S3
      - name: Upload to S3
        if: github.event_name == 'pull_request' && inputs.deploy == true
        id: upload-s3
        uses: hkusu/s3-upload-action@v2
        with:
            aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}
            aws-bucket: ${{ env.BUCKET_NAME }}
            bucket-root: "/"
            destination-dir: "/"
            file-path: "${{inputs.package-dist-directory}}/${{ env.ZIP_NAME }}"
            content-type: "application/zip"
            public: true

      # Create branch on Amplify
      - name: Create Amplify branch
        if: github.event_name == 'pull_request' && inputs.deploy == true
        shell: bash
        # We return true to prevent the step from failing if the branch already exists
        run: |
            aws amplify create-branch \
            --app-id ${{ inputs.amplify-app-id }} \
            --branch-name ${{ env.BRANCH_NAME }} \
            || true

      # Deploy Amplify from S3
      - name: Deploy Amplify from S3
        if: github.event_name == 'pull_request' && inputs.deploy == true
        shell: bash
        run: |
            aws amplify start-deployment \
            --app-id ${{ inputs.amplify-app-id }} \
            --branch-name ${{ env.BRANCH_NAME }} \
            --source-url https://${{ env.BUCKET_NAME }}.s3.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ZIP_NAME }}

      # If successful
      - name: Update deployment status (success)
        if: github.event_name == 'pull_request' && inputs.deploy && success()
        uses: chrnorm/deployment-status@v2
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            environment-url: https://pr${{ github.event.number }}.${{ inputs.amplify-app-id }}.amplifyapp.com
            deployment-id: ${{ steps.deploy.outputs.deployment_id }}
            state: "success"

      # If it failed
      - name: Update deployment status (failure)
        if: github.event_name == 'pull_request' && inputs.deploy && failure()
        uses: chrnorm/deployment-status@v2
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            environment-url: https://pr${{ github.event.number }}.${{ inputs.amplify-app-id }}.amplifyapp.com
            deployment-id: ${{ steps.deploy.outputs.deployment_id }}
            state: "failure"
